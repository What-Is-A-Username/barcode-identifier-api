# Generated by Django 4.1.3 on 2023-01-10 04:41

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BlastDb',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('custom_name', models.CharField(max_length=255)),
                ('locked', models.BooleanField(default=False)),
                ('description', models.CharField(blank=True, default='', max_length=1024)),
            ],
            options={
                'ordering': ['custom_name'],
            },
        ),
        migrations.CreateModel(
            name='BlastRun',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('runtime', models.DateTimeField(auto_now_add=True)),
                ('job_name', models.CharField(blank=True, default='', max_length=255)),
                ('query_sequence', models.TextField(blank=True, default='', max_length=10000)),
                ('job_status', models.CharField(choices=[('UNK', 'UNKNOWN'), ('DEN', 'DENIED'), ('QUE', 'QUEUED'), ('STA', 'RUNNING'), ('ERR', 'ERRORED'), ('FIN', 'FINISHED')], default='UNK', max_length=3)),
                ('job_start_time', models.DateTimeField(blank=True, null=True)),
                ('job_end_time', models.DateTimeField(blank=True, null=True)),
                ('blast_version', models.TextField(blank=True, default='', max_length=100)),
                ('errors', models.TextField(blank=True, default='', max_length=10000)),
                ('db_used', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usages', to='barcode_blastn.blastdb')),
            ],
        ),
        migrations.CreateModel(
            name='NuccoreSequence',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('accession_number', models.CharField(max_length=255)),
                ('uid', models.CharField(blank=True, default='', max_length=2048)),
                ('definition', models.CharField(blank=True, default='', max_length=255)),
                ('organism', models.CharField(blank=True, default='', max_length=255)),
                ('organelle', models.CharField(blank=True, default='', max_length=255)),
                ('mol_type', models.CharField(blank=True, default='', max_length=255)),
                ('isolate', models.CharField(blank=True, default='', max_length=255)),
                ('country', models.CharField(blank=True, default='', max_length=255)),
                ('specimen_voucher', models.CharField(blank=True, default='', max_length=150)),
                ('dna_sequence', models.TextField(blank=True, default='', max_length=10000)),
                ('translation', models.TextField(blank=True, default='', max_length=10000)),
                ('lat_lon', models.CharField(blank=True, default='', max_length=64)),
                ('type_material', models.CharField(blank=True, default='', max_length=255)),
                ('owner_database', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sequences', to='barcode_blastn.blastdb')),
            ],
            options={
                'ordering': ['accession_number'],
            },
        ),
        migrations.CreateModel(
            name='Hit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_accession_version', models.CharField(max_length=128)),
                ('subject_accession_version', models.CharField(max_length=128)),
                ('percent_identity', models.DecimalField(decimal_places=3, max_digits=6)),
                ('alignment_length', models.IntegerField()),
                ('mismatches', models.IntegerField()),
                ('gap_opens', models.IntegerField()),
                ('query_start', models.IntegerField()),
                ('query_end', models.IntegerField()),
                ('sequence_start', models.IntegerField()),
                ('sequence_end', models.IntegerField()),
                ('evalue', models.DecimalField(decimal_places=100, max_digits=110)),
                ('bit_score', models.DecimalField(decimal_places=100, max_digits=110)),
                ('db_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='barcode_blastn.nuccoresequence')),
                ('owner_run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hits', to='barcode_blastn.blastrun')),
            ],
        ),
        migrations.CreateModel(
            name='BlastQuerySequence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('definition', models.CharField(max_length=255)),
                ('query_sequence', models.CharField(max_length=10000)),
                ('owner_run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='queries', to='barcode_blastn.blastrun')),
            ],
        ),
    ]
