# Generated by Django 4.1.3 on 2023-04-11 16:29

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('barcode_blastn', '0004_remove_blastrun_query_sequence_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='blastdb',
            options={'ordering': ['custom_name'], 'verbose_name': 'BLAST Database', 'verbose_name_plural': 'BLAST Databases'},
        ),
        migrations.AlterModelOptions(
            name='blastquerysequence',
            options={'verbose_name': 'BLASTN Query Sequence', 'verbose_name_plural': 'BLASTN Query Sequences'},
        ),
        migrations.AlterModelOptions(
            name='blastrun',
            options={'ordering': ['runtime'], 'verbose_name': 'BLASTN Run', 'verbose_name_plural': 'BLASTN Runs'},
        ),
        migrations.AlterModelOptions(
            name='hit',
            options={'ordering': ['percent_identity'], 'verbose_name': 'BLASTN Run Hit', 'verbose_name_plural': 'BLASTN Run Hits'},
        ),
        migrations.AlterModelOptions(
            name='nuccoresequence',
            options={'ordering': ['accession_number'], 'verbose_name': 'GenBank Accession', 'verbose_name_plural': 'GenBank Accessions'},
        ),
        migrations.RemoveField(
            model_name='nuccoresequence',
            name='mol_type',
        ),
        migrations.AlterField(
            model_name='blastdb',
            name='created',
            field=models.DateTimeField(auto_now_add=True, help_text='Date and time at which database was created'),
        ),
        migrations.AlterField(
            model_name='blastdb',
            name='custom_name',
            field=models.CharField(help_text='Name of BLAST database', max_length=255),
        ),
        migrations.AlterField(
            model_name='blastdb',
            name='description',
            field=models.CharField(blank=True, default='', help_text='Description of BLAST database', max_length=1024),
        ),
        migrations.AlterField(
            model_name='blastdb',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of this BLAST database', primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='blastdb',
            name='locked',
            field=models.BooleanField(default=False, help_text='Is editing of entry set (adding/removing) in the database locked?'),
        ),
        migrations.AlterField(
            model_name='blastquerysequence',
            name='definition',
            field=models.CharField(help_text='Definition line', max_length=255),
        ),
        migrations.AlterField(
            model_name='blastquerysequence',
            name='owner_run',
            field=models.ForeignKey(help_text='Job/run in which this query entry appeared', on_delete=django.db.models.deletion.CASCADE, related_name='queries', to='barcode_blastn.blastrun'),
        ),
        migrations.AlterField(
            model_name='blastquerysequence',
            name='query_sequence',
            field=models.CharField(help_text='Sequence text', max_length=10000),
        ),
        migrations.AlterField(
            model_name='blastrun',
            name='alignment_job_id',
            field=models.CharField(blank=True, default='', help_text='External job ID used to construct hit tree', max_length=100),
        ),
        migrations.AlterField(
            model_name='blastrun',
            name='blast_version',
            field=models.TextField(blank=True, default='', help_text='Version of BLASTn used', max_length=100),
        ),
        migrations.AlterField(
            model_name='blastrun',
            name='complete_alignment_job_id',
            field=models.CharField(blank=True, default='', help_text='External job ID used to construct database tree', max_length=100),
        ),
        migrations.AlterField(
            model_name='blastrun',
            name='create_db_tree',
            field=models.BooleanField(default=True, help_text='Perform alignment and construct "database tree" of query sequences and all database sequences?'),
        ),
        migrations.AlterField(
            model_name='blastrun',
            name='create_hit_tree',
            field=models.BooleanField(default=True, help_text='Perform alignment and construct "hit tree" of query sequences and hits?'),
        ),
        migrations.AlterField(
            model_name='blastrun',
            name='db_tree',
            field=models.TextField(blank=True, default='', help_text='Newick/phylip tree string of database tree.'),
        ),
        migrations.AlterField(
            model_name='blastrun',
            name='db_used',
            field=models.ForeignKey(help_text='The curated BLAST database against which the query BLAST was run.', on_delete=django.db.models.deletion.CASCADE, related_name='usages', to='barcode_blastn.blastdb'),
        ),
        migrations.AlterField(
            model_name='blastrun',
            name='errors',
            field=models.TextField(blank=True, default='', help_text='Error message text', max_length=10000),
        ),
        migrations.AlterField(
            model_name='blastrun',
            name='hit_tree',
            field=models.TextField(blank=True, default='', help_text='Newick/phylip tree string of hit tree.'),
        ),
        migrations.AlterField(
            model_name='blastrun',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the run', primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='blastrun',
            name='job_end_time',
            field=models.DateTimeField(blank=True, help_text='Date and time when job successfully finished running', null=True),
        ),
        migrations.AlterField(
            model_name='blastrun',
            name='job_error_time',
            field=models.DateTimeField(blank=True, help_text='Date and time when job encountered an error', null=True),
        ),
        migrations.AlterField(
            model_name='blastrun',
            name='job_name',
            field=models.CharField(blank=True, default='', help_text='Job name given by run submission', max_length=255),
        ),
        migrations.AlterField(
            model_name='blastrun',
            name='job_start_time',
            field=models.DateTimeField(blank=True, help_text='Date and time when job first started running', null=True),
        ),
        migrations.AlterField(
            model_name='blastrun',
            name='job_status',
            field=models.CharField(choices=[('UNK', 'UNKNOWN'), ('DEN', 'DENIED'), ('QUE', 'QUEUED'), ('STA', 'RUNNING'), ('ERR', 'ERRORED'), ('FIN', 'FINISHED')], default='UNK', help_text='Current status of the job', max_length=3),
        ),
        migrations.AlterField(
            model_name='blastrun',
            name='runtime',
            field=models.DateTimeField(auto_now_add=True, help_text='Date and time when run first received by server'),
        ),
        migrations.AlterField(
            model_name='hit',
            name='alignment_length',
            field=models.IntegerField(help_text='Alignment length'),
        ),
        migrations.AlterField(
            model_name='hit',
            name='bit_score',
            field=models.DecimalField(decimal_places=100, help_text='Bit score', max_digits=110),
        ),
        migrations.AlterField(
            model_name='hit',
            name='db_entry',
            field=models.ForeignKey(help_text='BLAST database used in the run', on_delete=django.db.models.deletion.CASCADE, to='barcode_blastn.nuccoresequence'),
        ),
        migrations.AlterField(
            model_name='hit',
            name='evalue',
            field=models.DecimalField(decimal_places=100, help_text='Expect value', max_digits=110),
        ),
        migrations.AlterField(
            model_name='hit',
            name='gap_opens',
            field=models.IntegerField(help_text='Number of Gap openings'),
        ),
        migrations.AlterField(
            model_name='hit',
            name='mismatches',
            field=models.IntegerField(help_text='Number of mismatches'),
        ),
        migrations.AlterField(
            model_name='hit',
            name='owner_run',
            field=models.ForeignKey(help_text='Run in which this hit appeared', on_delete=django.db.models.deletion.CASCADE, related_name='hits', to='barcode_blastn.blastrun'),
        ),
        migrations.AlterField(
            model_name='hit',
            name='percent_identity',
            field=models.DecimalField(decimal_places=3, help_text='Percent identity', max_digits=6),
        ),
        migrations.AlterField(
            model_name='hit',
            name='query_accession_version',
            field=models.CharField(help_text='Sequence identifier of query sequence', max_length=128),
        ),
        migrations.AlterField(
            model_name='hit',
            name='query_end',
            field=models.IntegerField(help_text='End of alignment in query'),
        ),
        migrations.AlterField(
            model_name='hit',
            name='query_start',
            field=models.IntegerField(help_text='Start of alignment in query'),
        ),
        migrations.AlterField(
            model_name='hit',
            name='sequence_end',
            field=models.IntegerField(help_text='End of alignment in subject'),
        ),
        migrations.AlterField(
            model_name='hit',
            name='sequence_start',
            field=models.IntegerField(help_text='Start of alignment in subject'),
        ),
        migrations.AlterField(
            model_name='hit',
            name='subject_accession_version',
            field=models.CharField(help_text='Sequence identifier of sequence in database', max_length=128),
        ),
        migrations.AlterField(
            model_name='nuccoresequence',
            name='accession_number',
            field=models.CharField(help_text='Accession number on GenBank', max_length=255),
        ),
        migrations.AlterField(
            model_name='nuccoresequence',
            name='country',
            field=models.CharField(blank=True, default='', help_text='Origin country of the source specimen', max_length=255),
        ),
        migrations.AlterField(
            model_name='nuccoresequence',
            name='created',
            field=models.DateTimeField(auto_now_add=True, help_text='Date and time at which record was last updated from GenBank'),
        ),
        migrations.AlterField(
            model_name='nuccoresequence',
            name='definition',
            field=models.CharField(blank=True, default='', help_text='The definition line', max_length=255),
        ),
        migrations.AlterField(
            model_name='nuccoresequence',
            name='dna_sequence',
            field=models.TextField(blank=True, default='', help_text='Sequence data', max_length=10000),
        ),
        migrations.AlterField(
            model_name='nuccoresequence',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of this sequence entry', primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='nuccoresequence',
            name='isolate',
            field=models.CharField(blank=True, default='', help_text='Isolate of the source specimen', max_length=255),
        ),
        migrations.AlterField(
            model_name='nuccoresequence',
            name='lat_lon',
            field=models.CharField(blank=True, default='', help_text='Latitude and longitude from which specimen originated', max_length=64),
        ),
        migrations.AlterField(
            model_name='nuccoresequence',
            name='organelle',
            field=models.CharField(blank=True, default='', help_text='Organelle of the source', max_length=255),
        ),
        migrations.AlterField(
            model_name='nuccoresequence',
            name='organism',
            field=models.CharField(blank=True, default='', help_text='Scientific name of source organism', max_length=255),
        ),
        migrations.AlterField(
            model_name='nuccoresequence',
            name='owner_database',
            field=models.ForeignKey(help_text='The curated database to which this sequence was added', on_delete=django.db.models.deletion.CASCADE, related_name='sequences', to='barcode_blastn.blastdb'),
        ),
        migrations.AlterField(
            model_name='nuccoresequence',
            name='specimen_voucher',
            field=models.CharField(blank=True, default='', help_text='Specimen voucher of the source specimen', max_length=150),
        ),
        migrations.AlterField(
            model_name='nuccoresequence',
            name='translation',
            field=models.TextField(blank=True, default='', help_text='Amino acid translation corresponding to the coding sequence', max_length=10000),
        ),
        migrations.AlterField(
            model_name='nuccoresequence',
            name='type_material',
            field=models.CharField(blank=True, default='', help_text='Specimen type of the source', max_length=255),
        ),
        migrations.AlterField(
            model_name='nuccoresequence',
            name='uid',
            field=models.CharField(blank=True, default='', help_text='Obselete UUID', max_length=2048),
        ),
    ]
