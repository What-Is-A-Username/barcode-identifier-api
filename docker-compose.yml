version: '3'
services:
  db:
    image: postgres
    env_file: docker.env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data  
  pyvenv_image:
    container_name: pyvenv_image
    build: .
    depends_on:
      - db
  barcode_identifier_api:
    image: pyvenv_image
    build:
      context: ./compose/barcode_identifier_api
      dockerfile: Dockerfile
    env_file: docker.env
    environment:
      - DB_HOST=db
      - DB_PORT=5432
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate && 
             python manage.py init_superuser --username=$DB_USER --email=$DB_EMAIL --password=$DB_PASSWORD &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    volumes:
      - ".:/barcode_identifier_api"
      # only for dev container: link the /data/runs and /var/www/runs folder to see files in local directories
      - "./var/data:/var/data/"
      - "./var/web:/vol/static"
    depends_on:
      - db
      - celery_worker
  rabbitmq:
    image: bitnami/rabbitmq:latest
    env_file: docker.env
  celery_worker:
    image: pyvenv_image
    build: 
      context: ./compose/celery_worker
      dockerfile: Dockerfile
    env_file: docker.env
    environment:
      - DB_HOST=db
      - DB_PORT=5432
    volumes:
      - ".:/barcode_identifier_api"
      - "./var/data:/var/data/"
      - "./var/web:/vol/static/"
    command: >
      sh -c "celery_run.sh"
    depends_on:
      - rabbitmq
      - db
      
volumes:
  pgdata:

