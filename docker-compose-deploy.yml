version: '3'

services:
  barrel_db:
    image: postgres
    container_name: barrel_db
    env_file: docker.env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    # for persistance, we used named volume that will be always stored on the server
    # restart: always

  barrel_venv_image:
    container_name: barrel_venv_image 
    env_file: docker.env
    build:
      context: .
      dockerfile: ./compose/barrel_venv_image/Dockerfile
    depends_on:
      - barrel_db
    command: >
      sh -c "echo barrel_venv_image success"
    volumes:
      - "static-data:/vol/static"
      - "var-data:/var/data"

  barrel:
    container_name: barrel
    build:
      context: .
      dockerfile: ./compose/barrel/Dockerfile
    # auto-restart on crash
    # restart: always
    env_file: docker.env
    environment:
      - DB_HOST=barrel_db
      - DB_PORT=5432
    depends_on:
      - barrel_db
    volumes:
      - "static-data:/vol/static"
      - "var-data:/var/data"
    command: >
      sh -c "/barrel/scripts/run.sh"

  barrel_rabbitmq:
    image: bitnami/rabbitmq:latest
    container_name: barrel_rabbitmq
    env_file: docker.env

  celery_worker:
    container_name: barrel_celery_worker
    build: 
      context: ./compose/barrel_celery_worker
      dockerfile: Dockerfile
    env_file: docker.env
    environment:
      - DB_HOST=barrel_db
      - DB_PORT=5432
    volumes:
      - "var-data:/var/data/"
      - "static-data:/vol/static/"
    command: >
      sh -c "celery_run.sh"
    depends_on:
      - barrel_rabbitmq
      - barrel_db

  barrel_proxy:
    container_name: barrel_proxy
    build:
      context: ./compose/proxy
    # restart: always
    depends_on:
      - barrel
    ports:
      - 8000:8000
    # static-data is shared between app and proxy
    volumes:
      - static-data:/vol/static

  barrel_debug:
    image: barrel_venv_image
    container_name: barrel

volumes:
  postgres-data:
  static-data:
  var-data:
